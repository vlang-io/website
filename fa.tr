examples
مثال ها
-----
documentation
مرجع
-----
modules
ماژول ها
-----
faq
پرسش و پاسخ
-----
built_in_v
موجود در داخل V
-----
the_v_lang
زبان برنامه نویسی V
-----
v_slogan
 زبان ساده، سریع، امن، کامپایل شده برای ساختن برنامه های قابل نگهداری
-----
includes_binaries 
شامل باینریهای برای ۳ سیستم ها
-----
install_source 
یا نصب از منبع
-----
couple_seconds
این فقت چن ثانیه می گیرد
-----
wip_info
یک زبان توسعه یافته در مرحله اولیه است. ویژگی هایی که هنوز هم کار می کنند با wip$ مشخص شده اند
<br> 
هر چیز دیگری در این صفحه و مرجع اجرا شده و باز شده است.
<p> 
در زمان انتشار V 1.0 برنامه ریزی شده برای دسامبر 2019، هیچ کدام از wip$ سمت چپ وجود نخواهد داشت.
-----
forum
انجمن
-----
blog
وبلاگ
-----
fast_compilation
کامپایل کردن سریع
-----
safety
امنیت
-----
performance
سرعت
-----
simple_language_for_maintainable_programs
زبان ساده برای ساختن برنامه های قابل نگهداری
-----
zero_deps 
۴۰۰ کیلوبایت کامپایلر همراه با صفر وابستگی ها
-----
c_translation 
ترجمه کردن C/C++
-----
introduction
مقدمه
-----
comments
نظرات
-----
functions
وظیفه ها
-----
variables
متغیرها
-----
basic_types 
انواع اساسی
-----
strings
رشته متن
-----
arrays
آرایه ها
-----
maps
نگاشت ها
-----
if
If مشروط
-----
in_op 
اپراتور داخل (in)
-----
for_loop 
حلقه دار کردن for
-----
switch 
سوئیچ
-----
structs 
ساختار ها
-----
access_mod 
اصلاح کننده های دسترسی
-----
methods
میتود ها
-----
pure_fns
وظیفه های خالص
-----
high_fns
وظیفه های مرتبه بالا
-----
constants 
ثابت ها
-----
modules
ماژول ها
-----
interfaces
رابط ها
-----
enums
Enums
-----
optionals_and_errors 
انواع گزینه های و دست زدن به خطا ها
-----
generics
جنریک ها
-----
concurrency
همزمانی
-----
decoding_json 
رمزگشایی JSON
-----
testing
آزمایش کردن
-----
memory_management 
مدیریت حافظه
-----
fast_comp1
 کامپایل میکند بین ۱۰۰ هزاز و ۱.۲ میلیون خطوط کد در هر ثانیه در هر هسته CPU
-----
fast_comp2
خود را کامپایل میکند در ۰.۱۵ - ۰.۶ ثانیه
-----
fast_comp3
-----
fast_comp4
-----
no_null
بدون نول
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----