examples
実装例
-----
documentation
ドキュメント
-----
modules
モジュール
-----
faq
よくある質問
-----
built_in_v
Built in V
-----
the_v_lang
プログラミング言語V
-----
v_slogan
保守性に優れたソフトウェアを開発するための、シンプル・高速・安全なコンパイラ型言語
-----
includes_binaries 
3つのOS向けのバイナリがあります
-----
install_source 
またはVをソースコードからインストール
-----
couple_seconds 
これには数秒かかります
-----
wip_info
Vは活発に開発が行われていますが、開発の初期段階にある言語です。まだ開発中の機能には $wip タグがついています。このページ内で $wip タグのないものは全て実装されておりオープンソース化されています。

V 1.0の公開は2019年12月に予定されており、 その頃には $wip タグは全て取り除かれる予定です。
-----
forum
フォーラム
-----
blog
ブログ
-----
fast_compilation
高速なコンパイル
-----
safety
安全性
-----
performance 
パフォーマンス
-----
simple_language_for_maintainable_programs
保守性に優れたプログラムを構築するためのシンプルな言語
-----
zero_deps 
依存性0で400 KBのコンパイラ
-----
c_translation 
C/C++への変換
-----
introduction
はじめに
-----
comments
コメント
-----
functions
関数
-----
variables
変数
-----
basic_types
基本型
-----
strings
文字列
-----
arrays
配列
-----
maps
マップ
-----
if
If条件分岐
-----
in_op
In演算子
-----
for_loop
Forループ
-----
switch
Switch
-----
structs
構造体
-----
access_mod
アクセス修飾子
-----
methods
メソッド
-----
pure_fns
純粋関数
-----
high_fns
高階関数
-----
constants
定数
-----
modules
モジュール
-----
interfaces
インターフェース
-----
enums
列挙型
-----
optionals_and_errors
Optional型とエラーハンドリング
-----
generics
ジェネリクス
-----
concurrency
並列処理
-----
decoding_json
JSONのデコード
-----
testing
テスト
-----
memory_management
メモリ管理
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----


