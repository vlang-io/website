examples
예제
-----
documentation
문서
-----
modules
모듈
-----
faq
자주 묻는 질문
-----
built_in_v
V로 만들어진 것들
-----
the_v_lang
V 프로그래밍 언어
-----
v_slogan
Simple, fast, safe, compiled language for developing maintainable software
유지보수가 손쉬운 소프트웨어 개발을 위한 가볍고, 빠르고, 안전한 컴파일 언어
-----
includes_binaries 
각기 다른 3 종류의 시스템을 위한 실행 파일 
-----
install_source 
혹은 소스 코드로부터 V를 설치 
-----
couple_seconds 
이 작업은 약간의 시간이 소요됩니다.
-----
wip_info
V는 활발하게 개발되고 있는 프로그래밍 언이며, 현재 초기 발전 단계에 있습니다.
개발 중인 기능들은 $wip 로 표시되어 있습니다.
<br> 
이 페이지와 문서에 있는 것 이외의 모든 것들은 구현되어 있으며, 소스가 공개되어 있습니다.
<p> 
2019년 12월에 계획된 V 1.0 릴리즈 시점에서는 $wip가 남아 있지 않을 것입니다.
-----
forum
포럼
-----
blog
블로그
-----
fast_compilation
빠른 컴파일
-----
safety
안전성
-----
performance 
성능 
-----
simple_language_for_maintainable_programs
유지보수가 손쉬운 프로그램을 만들기 위한 가벼운 언어
-----
zero_deps 
의존성이 없는 400 KB 크기의 컴파일러 
-----
c_translation 
C/C++ 변환 
-----
introduction
소개
-----
comments
주석
-----
functions
함수 
-----
variables
변수 
-----
basic_types 
기본 자료형 
-----
strings
문자열 
-----
arrays
배열 
-----
maps
맵 
-----
if
if 조건문
-----
in_op 
in 연산자 
-----
for_loop 
for 반복문 
-----
switch 
switch 조건문 
-----
structs 
구조체 
-----
access_mod 
접근 한정자 
-----
methods
메서드
-----
pure_fns 
순수 함수 
-----
high_fns 
고차 함수 
-----
constants 
상수 
-----
modules
모듈
-----
interfaces
인터페이스
-----
enums
열거형
-----
optionals_and_errors 
보조 자료형 & 오류 처리 
-----
generics
제너릭
-----
concurrency
병행성
-----
decoding_json 
JSON 복호화 
-----
testing
테스트
-----
memory_management 
메모리 관리 
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----


