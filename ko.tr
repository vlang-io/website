examples
Examples
-----
documentation
Documentation
-----
modules
Modules
-----
faq
FAQ
-----
built_in_v
Built in V
-----
the_v_lang
The V Programming Language
-----
v_slogan
Simple, fast, safe, compiled language for developing maintainable software
-----
includes_binaries 
includes binaries for 3 systems
-----
install_source 
Or install V from source 
-----
couple_seconds 
this will take a couple of seconds
-----
wip_info
V is an actively developed language at an early stage.
Features that are still being worked on are marked with $wip
<br> 
Everything else on this page and the docs has been implemented and open-sourced.
<p> 
By the time of the V 1.0 release planned for December 2019, there will be no $wip's left.
-----
forum
Forum
-----
blog
Blog 
-----
fast_compilation
Fast compilation
-----
safety
Safety
-----
performance 
Performance 
-----
simple_language_for_maintainable_programs
Simple language for building  maintainable programs 
-----
zero_deps 
400 KB compiler with zero dependencies
-----
c_translation 
C/C++ translation 
-----
introduction
Introduction 
-----
comments
Comments 
-----
functions
Functions 
-----
variables
Variables 
-----
basic_types 
Basic types 
-----
strings
Strings
-----
arrays
Arrays 
-----
maps
Maps 
-----
if
If 
-----
in_op 
In operator 
-----
for_loop 
For loop 
-----
switch 
Switch 
-----
structs 
Structs 
-----
access_mod 
Access modifiers 
-----
methods
Methods
-----
pure_fns 
Pure functions 
-----
high_fns 
High order functions 
-----
constants 
Constants 
-----
modules
Modules 
-----
interfaces
Interfaces 
-----
enums
Enums 
-----
optionals_and_errors 
Option types & error handling 
-----
generics
Generics 
-----
concurrency
Concurrency 
-----
decoding_json 
Decoding JSON 
-----
testing
Testing 
-----
memory_management 
Memory management 
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----

