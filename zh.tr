examples
例子
-----
documentation
文档
-----
modules
模块
-----
faq
常见问题
-----
built_in_v
用V构建的作品
-----
the_v_lang
V编程语言
-----
v_slogan
简洁、快速、安全的编译型语言，用于开发易维护的软件
-----
includes_binaries 
包括3种操作系统的二进制文件
-----
install_source 
或者从源码安装 V
-----
couple_seconds 
这将花费几秒钟
-----
wip_info
V 正处于被积极开发的早期阶段，仍在开发过程中的特性都会被标记为 $wip。<br> 
本页面及文档中的其他未被标记的描述，都已被实现并且开源。
<p> 
V 1.0 计划于2019年12月发布，届时将不会遗留任何 $wip 标记。
-----
forum
论坛
-----
blog
博客
-----
fast_compilation
快速编译
-----
safety
安全
-----
performance 
性能
-----
simple_language_for_maintainable_programs
用于构建可维护程序的简洁语言
-----
zero_deps 
编译器仅 400 KB 且零依赖
-----
c_translation 
C/C++ 转写 
-----
introduction
介绍 
-----
comments
注释 
-----
functions
函数 
-----
variables
变量 
-----
basic_types 
基本类型 
-----
strings
字符串
-----
arrays
数组 
-----
maps
集合 
-----
if
If 语句 
-----
in_op 
In 运算符 
-----
for_loop 
For 循环 
-----
switch 
Switch 语句 
-----
structs 
结构体 
-----
access_mod 
访问修饰符 
-----
methods
方法
-----
pure_fns 
纯函数 
-----
high_fns 
高阶函数 
-----
constants 
常量 
-----
modules
模块 
-----
interfaces
接口 
-----
enums
枚举 
-----
optionals_and_errors 
Option 类型 & 错误处理 
-----
generics
泛型 
-----
concurrency
并发 
-----
decoding_json 
JSON 解析 
-----
testing
测试 
-----
memory_management 
内存管理 
-----
-----
V_is_a_statically_typed_compiled_programming_language_designed_for_building_maintainable_software.
V是一种静态类型的编译型编程语言，它被设计用来构建可维护的软件。
-----
It's_similar_to_Go_and_is_also_influenced_by_Oberon,_Rust,_Swift.
它很像Go，并且也受到Oberon，Rust，Swift等的影响。
-----
V_is_a_very_simple_language._Going_through_this_documentation_will_take_you_about_half_an_hour,_and_by_the_end_of_it_you_will_learn_pretty_much_the_entire_language.
V是一种非常简单的语言。浏览这个文档大约会花费你半个小时的时间，而且在读完后，你将差不多学习了整个语言。
-----
Despite_being_simple,_it_gives_a_lot_of_power_to_the_developer._Anything_you_can_do_in_other_languages,_you_can_do_in_V.
虽然很简单，但它却给开发者提供了很多强大的功能。所有其它语言能做的事情，你都可以用V来做。
