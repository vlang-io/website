examples
Ejemplos
-----
documentation
Documentación
-----
modules
Módulos
-----
faq
FAQ
-----
built_in_v
Creado con V
-----
the_v_lang
The V Programming Language
-----
v_slogan
Lenguaje simple, rápido, seguro y compilado para el desarrollo de software mantenible
-----
includes_binaries 
incluye binarios para 3 sistemas
-----
install_source 
O instala V desde el código fuente 
-----
couple_seconds 
esto puede tardar un par de segundos
-----
wip_info
V es un lenguaje desarrollado activamente en una fase temprana.
Las características que están siendo desarrolladas están marcadas con $wip

El resto de cosas de esta página y la documentación han sido implementados y su código liberado.
Para cuando llegue la fecha planeada de V 1.0 en Diciembre de 2019, ya no quederán más $wip. 
-----
forum
Foro
-----
blog
Blog 
-----
fast_compilation
Compilación rápida
-----
safety
Seguridad
-----
performance 
Rendimiento
-----
simple_language_for_maintainable_programs
Lenguaje simple para crear programas mantenibles
-----
zero_deps 
Compilador de 400 KB sin dependencias
-----
c_translation 
Traducción desde C/C++ 
-----
introduction
Introducción 
-----
comments
Comentarios 
-----
functions
Funciones 
-----
variables
Variables 
-----
basic_types 
Tipos básicos
-----
strings
Strings
-----
arrays
Arrays 
-----
maps
Maps 
-----
if
If 
-----
in_op 
Operador In 
-----
for_loop 
Bucle for 
-----
switch 
Switch 
-----
structs 
Structs 
-----
access_mod 
Modificadores de acceso
-----
methods
Métodos
-----
pure_fns 
Funciones puras
-----
high_fns 
Funciones de orden superior
-----
constants 
Constantes 
-----
modules
Modulos 
-----
interfaces
Interfaces 
-----
enums
Enums 
-----
optionals_and_errors 
Tipos opcionales y manejo de errores
-----
generics
Generics 
-----
concurrency
Concurrencia 
-----
decoding_json 
Decodificación de JSON 
-----
testing
Pruebas 
-----
memory_management 
Manejo de memoria
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----
-----


