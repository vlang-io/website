examples
Примеры 
-----
documentation
Документация
-----
modules
Модули
-----
faq
FAQ
-----
built_in_v
Написано на V
-----
the_v_lang
Язык программирования V
-----
v_slogan
Простой, быстрый, безопасный язык для разработки легко поддерживаемых приложений
-----
includes_binaries 
включает в себя бинарые файлы для 3 систем 
-----
install_source 
или установите V из исходного кода 
-----
couple_seconds 
это займет пару секунд 
-----
wip_info
V является активно развивающимся языком на ранней стадии.
Функции над которыми еще ведется работа, отмечены знаком $wip

Всё остальное на этой странице и в документах было реализовано с открытым исходным кодом.
К моменту выхода V 1.0, запланированному на декабрь 2019 года, не останется $wip.
-----
forum
Форум 
-----
blog
Блог 
-----
-----
fast_compilation
Быстрая компиляция
-----
safety
Безопасность 
-----
performance 
Производительность 
-----
simple_language_for_maintainable_programs
Простота 
-----
zero_deps
400 KB компилятор без зависимостей 
-----
c_translation
Трансляция из C/C++ 
-----
introduction
Введение 
-----
comments
Комментарии 
-----
functions
Функции 
-----
variables
Переменные 
-----
basic_types 
Базовые типы 
-----
strings
Строки 
-----
arrays
Массивы 
-----
maps
Maps 
-----
if
If 
-----
in_op 
Оператор in 
-----
for_loop 
Цикл for 
-----
switch 
Switch 
-----
structs 
Cтруктуры 
-----
access_mod 
Модификаторы доступа
-----
methods
Методы 
-----
pure_fns 
Чистые функции 
-----
high_fns 
Функции высокого приоритета
-----
constants 
Константы 
-----
modules
Модули 
----- 
interfaces
Интерфейсы 
-----
enums
Enums 
-----
optionals_and_errors 
Опц. типы и обработка ошибок 
-----
generics
Generics 
-----
concurrency
Concurrency 
-----
decoding_json 
Работа с JSON 
-----
testing
Тестирование 
-----
memory_management 
Управление памятью 
-----
fast_comp1
V компилирует ≈1.2 миллиона строк кода в секунду на одном ядре.
-----
fast_comp2
Такая скорость достигается за счет прямой генерации в машинный (нативный) код $wip и сильной модульности кода.
-----
fast_comp3
V компилирует сам себя за 0.3 - 0.6 seconds.
-----
fast_comp4
V также может использовать C, тогда скорость компиляции падает до ≈100k строк/сек/CPU.
-----
no_null
Нет нулевых указателей
